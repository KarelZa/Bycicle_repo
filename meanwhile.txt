import { useState } from 'react';
import TotalPrice from './TotalPrice';

function Bikes({ bikesArr, daysArr }) {
	//const [totalPrice, setTotalPrice] = useState(0);
	const [inputList, setInputList] = useState([
		{
			numOfBikes: 0,
			priceOfBike: 0,
			numOfDays: 0,
		},
	]);

	// onChange handler method , that  update value of item in the list
	// e ==> event value
	// index ==> number of item in the list
	const handleChange = (e, index) => {
		const { name, value } = e.target; // passing correct information from event
		const list = [...inputList]; // creating copy of current list
		list[index][name] = value; // inputing new value to the correct item(object) and property in list
		setInputList(list); // updating state of list with new values
	};
	// onClick handler method, that adds new object into list
	const handleAddInput = () => {
		setInputList([...inputList, { numOfBikes: 0, priceOfBike: 0, numOfDays: 0 }]);
		// Another method how to push new object into list:
		// const list = [...inputList];
		// list.push({ numOfBikes: '', priceOfBike: '', numOfDays: '' });
		// setInputList(list);
	};

	const handleRemoveInput = (index) => {
		const list = [...inputList];
		list.splice(index, 1);
		setInputList(list);
	};

	//setStates to track inputs
	// const [price, setPrice] = useState(0);
	// const [days, setDays] = useState(0);
	const [extra, setExtra] = useState(0);
	// const [numOfBikes, setNumOfBikesInput] = useState(0); // stores current value of user's input (offer)
	const total = inputList.reduce(
		(totalBikesPrice, bike) => totalBikesPrice + bike.numOfDays * bike.priceOfBike * bike.numOfBikes,
		0
	); // stores total price of bike
	return (
		<div>
			{inputList.map((item, index) => {
				return (
					<div key={index} className='box'>
						<input
							type='number'
							min='0'
							name='numOfBikes'
							value={Number(item.numOfBikes)}
							onChange={(e) => handleChange(e, index)}
						/>
						<select name='priceOfBike' value={item.priceOfBike} onChange={(e) => handleChange(e, index)}>
							{bikesArr.map((bike) => (
								<option value={Number(bike.price)}>{bike.name}</option> // sets value of option and name from object
							))}
						</select>
						<select name='numOfDays' value={item.numOfDays} onChange={(e) => handleChange(e, index)}>
							{daysArr.map((day) => (
								<option value={day.number}>{day.placeHolder}</option> // sets value of option and placeHolder string from object
							))}
						</select>

						{inputList.length !== 1 && (
							<input type='button' value='remove' onClick={() => handleRemoveInput(index)} />
						)}
						{inputList.length - 1 === index && <input type='button' value='add' onClick={handleAddInput} />}
					</div>
				);
			})}
			<div className='typeOfRack'>
				<h4>Choose Bicycle rack:</h4>
				<label className='container'>
					<input type='radio' value='5' name='extraFeature' onChange={(e) => setExtra(e.target.value)} />
					<span className='checkmark'></span>
					<b>Rooftop</b> (+5% of total price)
				</label>

				<label className='container'>
					<input type='radio' value='10' name='extraFeature' onChange={(e) => setExtra(e.target.value)} />
					<span className='checkmark'></span>
					<b>Towbar</b> (+10% of total price)
				</label>

				<label className='container'>
					<input
						type='radio'
						value='0'
						name='extraFeature'
						defaultChecked='true'
						onChange={(e) => setExtra(e.target.value)}
					/>
					<span className='checkmark'></span>
					<b>Not needed</b>
				</label>
			</div>
			{/* Custom component , passing value of total(price) and value of extra state */}
			<TotalPrice total={total} extra={extra} />
			<pre>{JSON.stringify(total, null, 3)}</pre>
		</div>
	);
}

export default Bikes;
